def label = "worker-${UUID.randomUUID().toString()}"

podTemplate(label: label, containers: [
  containerTemplate(name: 'gradle', image: 'gradle:4.5.1-jdk9', command: 'cat', ttyEnabled: true),
  containerTemplate(name: 'docker', image: 'docker', command: 'cat', ttyEnabled: true),
  containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:v1.8.8', command: 'cat', ttyEnabled: true),
  containerTemplate(name: 'helm', image: 'lachlanevenson/k8s-helm:latest', command: 'cat', ttyEnabled: true)
],
volumes: [
  hostPathVolume(mountPath: '/home/gradle/.gradle', hostPath: '/tmp/jenkins/.gradle'),
  hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock')
]) {
node(label) {
     podTemplate(){
    //node('pod-custom') {
   // container('dind') {
      stage('Prepare') {
        def usernameLocal, passwordLocal
	  	withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'art', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME']]) {
	    usernameLocal = env.USERNAME
	    passwordLocal = env.PASSWORD
	    }
       stage ('Checkout SCM') {
	  checkout scm
	  }
       stage ('Docker Login') { 
          sh "docker login -u ${usernameLocal} -p ${passwordLocal} art-1"
          sh "docker login -u ${usernameLocal} -p ${passwordLocal} art-1"
	  }
        stage ('Docker build & tag') {
          sh "docker build -t art-1/curl:v_${env.BUILD_NUMBER} ."
	  }
	stage ('Docker publish to Artifactory') {
          sh "docker push art-1/curl:v_${env.BUILD_NUMBER}"
	  }
	  	}
        }
    //}
  //   }
}
